<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, December 23, 2017, 11:46 AM -->
<!-- MuClient version 5.04 -->

<!-- Plugin "AlignWindow" generated by Plugin Wizard -->

<muclient>
<plugin
   name="AlignWindow"
   author="Ruhsbaar"
   id="942aa4aa70e31ac872a10f74"
   language="Lua"
   purpose="Show alignment in a window"
   save_state="y"
   date_written="2017-12-23 11:45:32"
   requires="5.04"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="^\&lt;\&lt;\&lt; ([\w\s]+) \&gt;\&gt;\&gt;$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="RefreshAlignmentWindow"
  >
  <send>SetVariable("last_alignment", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Hp\: \d{2,4}\(\d{2,4}\)  Gp\: \d{2,4}\(\d{2,4}\)  Xp\: \d{1,10}  Burden\: \d{1,3}\%  Align\: ([\w\s]+)$"
   regexp="y"
   send_to="12"
   sequence="100"
   script="RefreshAlignmentWindow"
  >
  <send>SetVariable("last_alignment", "%1")</send>
  </trigger>
</triggers>
<aliases>
  <alias
    enabled="y"
    match="alignwindow"
    regexp="y"
    script="WindowToggle"
    sequence="100"
  ></alias>
</aliases>

<!--  Variables  -->

<variables>
  <variable name="last_alignment"></variable>
</variables>

<!-- Script -->
<script>
    <![CDATA[

require "movewindow"

local window_flag = true
local window_name = "align_window_" .. GetPluginID()

----
-- Hooks
----
function OnPluginEnable()
    RefreshAlignmentWindow()
end

function OnPluginDisable()
    WindowShow(window_name, false)
end

function OnPluginClose()
    WindowShow(window_name, false)
end

function OnPluginSaveState()
    movewindow.save_state(window_name)
end

----
-- Utilities
----

function EraseWindow()
end

function WindowToggle(name, line, wildcards)
    if window_flag == false then
        WindowShow(window_name, true)
        window_flag = true
    else
        WindowShow(window_name, false)
        window_flag = false
    end
end


----
-- Main
----

function CreateWindow()
    align = GetVariable("last_alignment")

    win_width, win_height = 200, 50

    -- Create a miniwindow
    window_info = movewindow.install(window_name, miniwin.pos_bottom_right, 0)
    WindowCreate(
        window_name,
        window_info.window_left,
        window_info.window_top,
        win_width, win_height,
        window_info.window_mode,
        window_info.window_flags,
        ColourNameToRGB("black")
    )

    movewindow.add_drag_handler(window_name, 0, 0, 0, 0, miniwin.cursor_both_arrow)

    -- Draw Borders
    WindowRectOp(window_name, miniwin.rect_frame, 0, 0, win_width, win_height, ColourNameToRGB("white"))

    -- Write alignment to window
    WindowFont (window_name, "f", "Trebuchet MS", 12, true, false, false, false) -- define font
    width   = WindowTextWidth (window_name, "f", align)
    left = (200 - width) / 2
    WindowText(window_name, "f", GetVariable("last_alignment"), left, 15, 0, 0, ColourNameToRGB("white"), false)

    -- Show the window on screen
    WindowShow(window_name, true)
end

function RefreshAlignmentWindow() 
    align = GetVariable("last_alignment")

    -- Clear the window
    WindowRectOp(window_name, miniwin.rect_fill, 0, 0, 0, 0, ColourNameToRGB("black"))

    -- Draw Borders
    WindowRectOp(window_name, miniwin.rect_frame, 0, 0, win_width, win_height, ColourNameToRGB("white"))

    -- Write alignment to window
    WindowFont (window_name, "f", "Trebuchet MS", 12, true, false, false, false) -- define font
    width   = WindowTextWidth (window_name, "f", align)
    left = (200 - width) / 2
    WindowText(window_name, "f", GetVariable("last_alignment"), left, 15, 0, 0, ColourNameToRGB("white"), false)
end

CreateWindow()
    ]]>
</script>

</muclient>
